Node.js:
-> It is uses an event-driven, non-blocking model that makes it lightweight and efficient.

    -> A js runtime built on chrome's v8 js engine.

    -> A platform which allows to run js on a computer/server.

    -> Read, delete and update files.

    -> Easily communicate with a database.

Why node.js is popular?

    -> It uses js.

    -> very fast(runs on the v8  engine & uses non-blocking code).

    -> Huge ecosystem of open source packages(npm).

    -> Great for real-time services(like chats).

JS engines:
-> Computers do not understand JS.
-> A js engine takes js, and converts it into something it does understand - machine code.

--------------> 23-June-22

Client and Server:

                                   Request
                            ---------------------->
                Client                                   Server
                            <----------------------
                                   Response

-> Protocols are used to communicate between the client and server.

-> A set of communication rules, that two sides agree to use when communicating.

-> Socket is acts like a channel that is used to transfer the data between 2 sides.

-> Http protocol is used to communicate between client and server.

-> The data should be divided into small parts and that parts are called packets.

Ports: A program running on a computer can listen for rquests sent to a particular port number.

Ex: 172.24.86.76:3000 => this 3000 is a port number.

                           Request + Request Headers
                            ---------------------->
                                   Request
                Client                                    Server
                                   Response
                            <----------------------
                          Response + Response Headers

Response Headers =>

-Content-Type => type of content we will give in this.

-Status => status is nothing but getting error or successful.

Buffers:

    -> Temporary storage spot for a chunk of data that is being transferred from one place to another.

    -> The buffer is filled with data, then passed along.

    -> Transfer small chunks of data at a time.

                              BUFFER
    Data Passed On <--------- |||||| <--|-- DATA.

-> Buffer is nothing but it diviedes the collection data into small chunks.

Stream: It is a flow of data.

        -> In node js, the data will flow like chunks and those chunks will store in buffer and finally that buffer will share the data.

        -> Can create strean in node js to transfer data.

        -> It will increase the performance.

-> Streams are 3 types:

    - Writable streams: allow node js to write data to a stream.

    - Readable streams: allow node js to read data from a stream.

    - Duplex: can read and write to a stream.

-> Pipes: The data is coverted into small chunks and sends into buffer. After that pipes are useful to write the stream automatically.

-> Pipes can move from read to write. But, not vice versa.

------------> 24-June-22

-> Express => It is also a package and it is used for routing and templating.

-> It helps in routing with the help of http methods.

    -> GET: app.get('route', fn)

    -> POST: app.post('route', fn)

    -> DELETE: app.delete('route', fn)

    -> PUT: